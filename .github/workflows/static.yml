# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract commit info
        id: extract
        uses: actions/github-script@v5
        with:
          script: |
            const commit = await github.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });
            const message = commit.data.commit.message;
            const actor = message.match(/by ([^\s]+)/)[1];
            const pr_number = message.match(/#\d+/)[0].substring(1);
            return { actor: actor, pr_number: pr_number };
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
      - name: Notify owner
        uses: actions/github-script@v5
        with:
          script: |
            const owner = "${{ github.repository_owner }}"
            const actor = "${{ steps.extract.outputs.actor }}"
            const pr_number = "${{ steps.extract.outputs.pr_number }}"
            const page_url = "${{ steps.deployment.outputs.page_url }}"
            const message = `Hello @${owner}, the deployment of changes by @${actor} in PR #${pr_number} has been completed. You can view the updated pages at ${page_url}.`
            github.issues.create({
              owner: owner,
              repo: context.repo.repo,
              title: `Deployment completed for PR #${pr_number}`,
              body: message
            })
